name: Jitsi Meet Docker Images

on:
  push:
    branches: [ main, master, testing ]
    tags: [ 'stable-*-ems*' ]
  pull_request:
    branches: [ main, master, testing ]

env:
  REGISTRY: ghcr.io
  REGISTRY_BASE_PATH: ghcr.io/${{ github.repository }}
  BASE_TAG: ${{ github.ref_name }}

jobs:
  build-push-base:
    env:
      IMAGE_NAME: base
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "base"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-base-java:
    env:
      IMAGE_NAME: base-java

    runs-on: ubuntu-latest

    needs:
    - build-push-base

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "base-java"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-jibri:
    env:
      IMAGE_NAME: jibri

    runs-on: ubuntu-latest

    needs:
    - build-push-base-java

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "jibri"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-jicofo:
    env:
      IMAGE_NAME: jicofo

    runs-on: ubuntu-latest

    needs:
    - build-push-base-java

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "jicofo"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-jigasi:
    env:
      IMAGE_NAME: jigasi

    runs-on: ubuntu-latest

    needs:
    - build-push-base

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "jigasi"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-jvb:
    env:
      IMAGE_NAME: jvb
    
    runs-on: ubuntu-latest

    needs:
    - build-push-base-java

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "jvb"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-prosody:
    env:
      IMAGE_NAME: prosody

    runs-on: ubuntu-latest

    needs:
    - build-push-base

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "prosody"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"

  build-push-web:
    env:
      IMAGE_NAME: web

    runs-on: ubuntu-latest

    needs:
    - build-push-base
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY_BASE_PATH }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "web"
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          "BASE_TAG=${{ env.BASE_TAG }}"
          "JITSI_REPO=${{ env.REGISTRY_BASE_PATH }}"
